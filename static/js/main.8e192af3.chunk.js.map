{"version":3,"sources":["components/Header.tsx","components/Title.tsx","components/Card.tsx","components/CardCollection.tsx","components/Pagination.tsx","components/Footer.tsx","components/App.tsx","index.tsx"],"names":["Header","year","Date","getFullYear","href","className","src","draggable","alt","Title","id","Card","props","genres","modifiedGenres","length","i","substring","getGenres","image","name","country","runtime","rating","CardCollection","loadingStatus","data","map","show","medium","network","webChannel","average","Pagination","pageNumbers","Math","ceil","totalItems","itemsPerPage","push","addition","start","end","onClick","mainTrigger","number","index","idHighlight","trigger","Footer","target","rel","App","useState","ApiData","setApiData","loading","setLoading","ApiPage","setApiPage","UserPage","setUserPage","setAddition","URL","firstIndex","lastIndex","UserData","slice","useEffect","fetchShows","a","axios","get","res","page","ShowMate","React","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e192af3.chunk.js","sourcesContent":["function Header() {\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <header>\r\n      <a href=\"/#\">\r\n        <div className=\"logo\">\r\n          <img\r\n            src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/apple/285/clapper-board_1f3ac.png\"\r\n            draggable=\"false\"\r\n            alt=\"clapper emoji\"\r\n          />\r\n        </div>\r\n        <h1> ShowMate</h1>\r\n      </a>\r\n      <h3 className=\"info\">Best TV Shows of {year} and All Time</h3>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Title() {\r\n  return (\r\n    <div id=\"title\">\r\n      <h3 className=\"first-title-el\">Cover</h3>\r\n      <h3 className=\"next-title-el\">Name</h3>\r\n      <h3 className=\"next-title-el\">Genres</h3>\r\n      <h3 className=\"next-title-el\">Country</h3>\r\n      <h3 className=\"next-title-el\">Runtime</h3>\r\n      <h3 className=\"next-title-el\">Rating</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","function Card(props: {\r\n  image: string;\r\n  name: string;\r\n  genres: string[];\r\n  country: string;\r\n  runtime: number;\r\n  rating: number;\r\n}) {\r\n  /** Get Modified Genres */\r\n  function getGenres(genres: string[]): string {\r\n    let modifiedGenres = \"\";\r\n    // Open array of genres\r\n    if (genres?.length) {\r\n      for (let i = 0; i < genres.length; i++) {\r\n        modifiedGenres += `${genres[i]},\\n`;\r\n      }\r\n      // Delete last comma\r\n      modifiedGenres = modifiedGenres.substring(0, modifiedGenres.length - 2);\r\n    }\r\n    return modifiedGenres;\r\n  }\r\n\r\n  const genres = getGenres(props.genres);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"first-card-el\" src={props.image} alt=\"cover\" />\r\n      <p className=\"next-card-el\">{props.name || \"-\"}</p>\r\n      <pre className=\"next-card-el\">{genres || \"-\"}</pre>\r\n      <p className=\"next-card-el\">{props.country || \"-\"}</p>\r\n      <p className=\"next-card-el\">{props.runtime || \"-\"}</p>\r\n      <p className=\"next-card-el\">{props.rating || \"-\"}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { ShowI } from \"../interfaces\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardCollection = (props: { data: ShowI[]; loadingStatus: boolean }) => {\r\n  if (props.loadingStatus) {\r\n    return (\r\n      <img className=\"loading-gif\" src=\"images/loading.gif\" alt=\"loading\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.data.map((show) => (\r\n        <Card\r\n          key={show.id}\r\n          image={\r\n            show.image?.medium ||\r\n            \"https://static.tvmaze.com/images/no-img/no-img-portrait-text.png\" // no image available picture\r\n          }\r\n          genres={show.genres}\r\n          name={show.name}\r\n          country={\r\n            show.network?.country?.name || show.webChannel?.country?.name\r\n          }\r\n          runtime={show.runtime}\r\n          rating={show.rating.average}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCollection;\r\n","const Pagination = (props: {\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  trigger: Function;\r\n  mainTrigger: Function;\r\n  addition: number;\r\n  idHighlight: number;\r\n}) => {\r\n  const pageNumbers: number[] = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(props.totalItems / props.itemsPerPage); i++) {\r\n    pageNumbers.push(i + props.addition);\r\n  }\r\n\r\n  const start = pageNumbers[0]; // start page\r\n  const end = pageNumbers[pageNumbers.length - 1]; // end page\r\n\r\n  if (pageNumbers.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <nav className=\"pag-bar\">\r\n      <ul className=\"pagination\">\r\n        {/** BACK PAGE */}\r\n        {start > 1 && (\r\n          <li key={start - 1} className=\"page-item\">\r\n            <a\r\n              onClick={() => props.mainTrigger(-1)}\r\n              href=\"/#\"\r\n              className=\"page-link\"\r\n            >\r\n              {start - 1}\r\n            </a>\r\n          </li>\r\n        )}\r\n        {/** CURRENT PAGES */}\r\n        {pageNumbers.map((number, index) =>\r\n          index === props.idHighlight - 1 ? (\r\n            <li key={number} className=\"page-item\">\r\n              <a\r\n                onClick={() => props.trigger(number)}\r\n                href=\"/#\"\r\n                className=\"page-link hightlited-page\"\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ) : (\r\n            <li key={number} className=\"page-item\">\r\n              <a\r\n                onClick={() => props.trigger(number)}\r\n                href=\"/#\"\r\n                className=\"page-link\"\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          )\r\n        )}\r\n        {/** NEXT PAGE */}\r\n        <li key={end + 1} className=\"page-item\">\r\n          <a\r\n            onClick={() => {\r\n              props.mainTrigger(1);\r\n            }}\r\n            href=\"/#\"\r\n            className=\"page-link\"\r\n          >\r\n            {end + 1}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","function Footer(props: { loadingStatus: boolean }) {\r\n  const year = new Date().getFullYear();\r\n  const fullName = \"Ilya Prikazchikov\";\r\n  return (\r\n    <footer className={props.loadingStatus ? \"on-loading\" : \"\"}>\r\n      <a href=\"https://github.com/Exy63\" target=\"_blank\" rel=\"noreferrer\">\r\n        <img\r\n          className=\"footer-logo\"\r\n          src=\"images/github-logo_icon-icons.com_73546.png\"\r\n          alt=\"github logo\"\r\n        />\r\n      </a>\r\n      <p>\r\n        {fullName} ⓒ {year}\r\n      </p>\r\n      <a\r\n        href=\"https://www.linkedin.com/in/ilyaprikazchikov/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <img\r\n          className=\"footer-logo\"\r\n          src=\"images/linkedin_black_logo_icon_147114.png\"\r\n          alt=\"linkedin logo\"\r\n        />\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","// Packages\r\nimport { useState, useEffect } from \"react\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\n// Interfaces\r\nimport { ShowI } from \"../interfaces\";\r\n// Components\r\nimport Header from \"./Header\";\r\nimport Title from \"./Title\";\r\nimport CardCollection from \"./CardCollection\";\r\nimport Pagination from \"./Pagination\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst showsPerPage = 50; // Количество на странице\r\n\r\nfunction App() {\r\n  // HOOKS\r\n  const [ApiData, setApiData] = useState<ShowI[]>([]); // Все данные с АПИ\r\n  const [loading, setLoading] = useState<boolean>(false); // Состояние загрузки\r\n  const [ApiPage, setApiPage] = useState<number>(0); // Страница в АПИ\r\n  const [UserPage, setUserPage] = useState<number>(1); // Страница пользователя\r\n  const [addition, setAddition] = useState<number>(0); // Добавочное число к страницам\r\n\r\n  // VARIABLES\r\n  const URL = `https://api.tvmaze.com/shows?page=${ApiPage}`;\r\n  const firstIndex = UserPage * showsPerPage - showsPerPage;\r\n  const lastIndex = UserPage * showsPerPage;\r\n  const UserData = ApiData.slice(firstIndex, lastIndex);\r\n\r\n  // FUNCTIONS\r\n\r\n  /**\r\n   * Get Data\r\n   * */\r\n  useEffect(() => {\r\n    const fetchShows = async () => {\r\n      setLoading(true);\r\n      const res: AxiosResponse<ShowI[]> = await axios.get<ShowI[]>(URL);\r\n      setApiData(res.data);\r\n      setLoading(false);\r\n    };\r\n    fetchShows();\r\n  }, [URL, ApiPage]);\r\n\r\n  /**\r\n   * Change UserPage\r\n   * */\r\n  function paginate(page: number) {\r\n    if (page > 5) {\r\n      do {\r\n        page = page - 5;\r\n      } while (page > 5);\r\n    }\r\n    setUserPage(page);\r\n  }\r\n\r\n  /**\r\n   * Change ApiPage\r\n   * */\r\n  function paginateApi(page: number) {\r\n    setApiData([]); // Очистка данных\r\n    setApiPage(ApiPage + page); // Переключение страницы в API\r\n    // Обработка данных для страницы\r\n    if (page === -1) {\r\n      setAddition(addition - 5);\r\n      setUserPage(5);\r\n    }\r\n    if (page === 1) {\r\n      setAddition(addition + 5);\r\n      setUserPage(1);\r\n    }\r\n  }\r\n\r\n  // RETURN\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Title />\r\n      <CardCollection data={UserData} loadingStatus={loading} />\r\n      <Pagination\r\n        itemsPerPage={showsPerPage}\r\n        totalItems={ApiData.length}\r\n        trigger={paginate}\r\n        mainTrigger={paginateApi}\r\n        addition={addition}\r\n        idHighlight={UserPage}\r\n      />\r\n      <Footer loadingStatus={loading} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nclass ShowMate extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nrender(<ShowMate />, document.getElementById(\"root\"));\n"],"sourceRoot":""}